/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * TiDev Titanium Mobile
 * Copyright TiDev, Inc. 04/07/2022-Present
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 */
package ti.codescanner;

import com.google.mlkit.vision.codescanner.GmsBarcodeScanner;
import com.google.mlkit.vision.codescanner.GmsBarcodeScannerOptions;
import com.google.mlkit.vision.codescanner.GmsBarcodeScanning;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.titanium.TiApplication;


@Kroll.module(name = "TiCodescanner", id = "ti.codescanner")
public class TiCodescannerModule extends KrollModule {

    // Standard Debugging variables
    private static final String LCAT = "TiCodescannerModule";

    public TiCodescannerModule() {
        super();
    }

    @Kroll.onAppCreate
    public static void onAppCreate(TiApplication app) {
    }

    // Methods
    @Kroll.method
    public void scan(@Kroll.argument(optional = true) KrollDict opts) {
        GmsBarcodeScanner scanner = null;
        if (opts != null) {
            if (opts.containsKeyAndNotNull("autoZoom") && opts.getBoolean("autoZoom")) {
                GmsBarcodeScannerOptions options = new GmsBarcodeScannerOptions.Builder()
                        .enableAutoZoom()
                        /*
                        .setBarcodeFormats(
                          Barcode.FORMAT_CODE_128
                        )
                        */
                        .build();
                scanner = GmsBarcodeScanning.getClient(TiApplication.getAppCurrentActivity(), options);
            }
        }

        if (scanner == null) {
            scanner = GmsBarcodeScanning.getClient(TiApplication.getAppCurrentActivity());
        }
        scanner.startScan().addOnSuccessListener(
                        barcode -> {
                            String rawValue = barcode.getRawValue();
                            KrollDict kd = new KrollDict();
                            kd.put("value", rawValue);
                            fireEvent("complete", kd);
                        })
                .addOnFailureListener(
                        e -> {
                            KrollDict kd = new KrollDict();
                            kd.put("message", e.getMessage());
                            fireEvent("error", kd);
                        })
                .addOnCanceledListener(
                        () -> {
                            KrollDict kd = new KrollDict();
                            kd.put("message", "Test");
                            fireEvent("cancel", kd);
                        });

    }
}
